#!/usr/bin/env python3
"""
Script to check Vector Store API availability in OpenAI SDK.
"""

import os
import sys
from pathlib import Path

# Add parent directory to path
sys.path.insert(0, str(Path(__file__).parent))

from dotenv import load_dotenv

# Load environment variables
load_dotenv()

from openai import OpenAI
import openai

def main():
    """Check Vector Store API availability."""
    
    api_key = os.getenv("OPENAI_API_KEY")
    if not api_key:
        print("‚ùå OPENAI_API_KEY not found in environment")
        sys.exit(1)
    
    client = OpenAI(api_key=api_key)
    
    print("=" * 80)
    print("OPENAI SDK VECTOR STORE API CHECK")
    print("=" * 80)
    
    print(f"\nüì¶ OpenAI SDK –≤–µ—Ä—Å–∏—è: {openai.__version__}")
    
    print("\n=== –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤ client.beta ===")
    beta_attrs = [attr for attr in dir(client.beta) if not attr.startswith('_')]
    for attr in beta_attrs:
        print(f"  - {attr}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ vector_stores
    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ Vector Stores API ===")
    if hasattr(client.beta, 'vector_stores'):
        print("‚úì client.beta.vector_stores —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        print("\n–ú–µ—Ç–æ–¥—ã vector_stores:")
        vs_methods = [m for m in dir(client.beta.vector_stores) if not m.startswith('_')]
        for method in vs_methods:
            print(f"  - {method}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π Vector Store
        print("\n=== –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π Vector Store ===")
        try:
            vs = client.beta.vector_stores.create(
                name="ERNI Test Vector Store"
            )
            print(f"‚úÖ Vector Store —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   ID: {vs.id}")
            print(f"   Name: {vs.name}")
            print(f"   Status: {vs.status if hasattr(vs, 'status') else 'N/A'}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Vector Store
            print("\n=== –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Vector Store ===")
            try:
                client.beta.vector_stores.delete(vs.id)
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π Vector Store —É–¥–∞–ª–µ–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: {e}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Vector Store: {e}")
            import traceback
            traceback.print_exc()
    else:
        print("‚úó client.beta.vector_stores –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏
    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø—É—Ç–µ–π ===")
    if hasattr(client, 'vector_stores'):
        print("‚úì client.vector_stores —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    else:
        print("‚úó client.vector_stores –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    print("\n" + "=" * 80)

if __name__ == "__main__":
    main()

