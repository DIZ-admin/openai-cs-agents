# ============================================================================
# ERNI Gruppe Building Agents - Environment Variables Template
# ============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env file to version control!
# ============================================================================

# ----------------------------------------------------------------------------
# OpenAI Configuration
# ----------------------------------------------------------------------------
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your-api-key-here

# Optional: Organization ID (if using organization account)
# OPENAI_ORG_ID=org-your-org-id-here

# ----------------------------------------------------------------------------
# Application Settings
# ----------------------------------------------------------------------------
# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode: true for development, false for production
DEBUG=true

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Application name (for logging and monitoring)
APP_NAME=ERNI Building Agents

# Application version
APP_VERSION=1.0.0

# ----------------------------------------------------------------------------
# Server Configuration
# ----------------------------------------------------------------------------
# Backend host and port
HOST=0.0.0.0
PORT=8000

# Number of worker processes (for production with Gunicorn)
# Recommended: (2 x CPU cores) + 1
WORKERS=4

# Request timeout in seconds
TIMEOUT=120

# ----------------------------------------------------------------------------
# Database Configuration
# ----------------------------------------------------------------------------
# PostgreSQL (recommended for production)
DATABASE_URL=postgresql://erni_user:your_password_here@localhost:5432/erni_agents

# MySQL (alternative)
# DATABASE_URL=mysql://erni_user:your_password_here@localhost:3306/erni_agents

# SQLite (development only - NOT for production)
# DATABASE_URL=sqlite:///./erni_agents.db

# Database pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_RECYCLE=3600

# ----------------------------------------------------------------------------
# Redis Configuration (for caching and rate limiting)
# ----------------------------------------------------------------------------
REDIS_URL=redis://localhost:6379/0

# Redis password (if authentication enabled)
# REDIS_PASSWORD=your_redis_password_here

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=50

# ----------------------------------------------------------------------------
# Security Settings
# ----------------------------------------------------------------------------
# Secret key for session encryption (generate with: openssl rand -hex 32)
SECRET_KEY=your-secret-key-here-minimum-32-characters-long

# Allowed hosts (comma-separated list of domains)
ALLOWED_HOSTS=localhost,127.0.0.1,yourdomain.com,www.yourdomain.com

# CORS allowed origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com,https://www.yourdomain.com

# CORS allow credentials
CORS_ALLOW_CREDENTIALS=true

# ----------------------------------------------------------------------------
# Rate Limiting
# ----------------------------------------------------------------------------
# Maximum requests per minute per IP
RATE_LIMIT_PER_MINUTE=60

# Maximum requests per hour per IP
RATE_LIMIT_PER_HOUR=1000

# Maximum requests per day per IP
RATE_LIMIT_PER_DAY=10000

# Rate limit storage backend: memory, redis
RATE_LIMIT_STORAGE=redis

# ----------------------------------------------------------------------------
# Session Configuration
# ----------------------------------------------------------------------------
# SQLite database path for conversation sessions (using OpenAI Agents SDK SQLiteSession)
# Default: data/conversations.db (relative to python-backend directory)
SESSIONS_DB_PATH=data/conversations.db

# Session timeout in minutes
SESSION_TIMEOUT_MINUTES=30

# Session cookie name
SESSION_COOKIE_NAME=erni_session

# Session cookie secure flag (true for HTTPS only)
SESSION_COOKIE_SECURE=false

# Session cookie HTTP only flag
SESSION_COOKIE_HTTPONLY=true

# Session cookie same site policy: lax, strict, none
SESSION_COOKIE_SAMESITE=lax

# ----------------------------------------------------------------------------
# Email Configuration (for notifications)
# ----------------------------------------------------------------------------
# SMTP server settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password-here
SMTP_FROM=noreply@erni-gruppe.ch
SMTP_FROM_NAME=ERNI Gruppe Building Agents

# Enable email notifications
EMAIL_ENABLED=false

# ----------------------------------------------------------------------------
# Monitoring & Logging
# ----------------------------------------------------------------------------
# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry environment
# SENTRY_ENVIRONMENT=production

# Sentry traces sample rate (0.0 to 1.0)
# SENTRY_TRACES_SAMPLE_RATE=0.1

# Log file path
LOG_FILE_PATH=/var/log/erni-backend/app.log

# Log rotation: max file size in MB
LOG_MAX_SIZE_MB=10

# Log rotation: number of backup files
LOG_BACKUP_COUNT=10

# ----------------------------------------------------------------------------
# Performance Settings
# ----------------------------------------------------------------------------
# Enable response compression
ENABLE_COMPRESSION=true

# Compression minimum size in bytes
COMPRESSION_MIN_SIZE=1000

# Enable caching
ENABLE_CACHING=true

# Default cache TTL in seconds
CACHE_TTL=300

# ----------------------------------------------------------------------------
# Feature Flags
# ----------------------------------------------------------------------------
# Enable/disable specific features
FEATURE_COST_ESTIMATION=true
FEATURE_PROJECT_STATUS=true
FEATURE_APPOINTMENT_BOOKING=true
FEATURE_FAQ=true

# Enable analytics
ENABLE_ANALYTICS=false

# Analytics provider: google, mixpanel, amplitude
# ANALYTICS_PROVIDER=google
# ANALYTICS_ID=your-analytics-id-here

# ----------------------------------------------------------------------------
# External Services
# ----------------------------------------------------------------------------
# Calendar integration (for appointment booking)
# CALENDAR_PROVIDER=google
# CALENDAR_API_KEY=your-calendar-api-key-here

# CRM integration (for customer data)
# CRM_PROVIDER=salesforce
# CRM_API_KEY=your-crm-api-key-here
# CRM_API_URL=https://your-instance.salesforce.com

# ERP integration (for project data)
# ERP_PROVIDER=sap
# ERP_API_KEY=your-erp-api-key-here
# ERP_API_URL=https://your-erp-system.com/api

# ----------------------------------------------------------------------------
# Backup Configuration
# ----------------------------------------------------------------------------
# Backup storage provider: local, s3, azure, gcp
BACKUP_PROVIDER=local

# Backup directory (for local storage)
BACKUP_DIR=/var/backups/erni-agents

# AWS S3 backup settings (if using S3)
# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key
# AWS_S3_BUCKET=erni-agents-backups
# AWS_S3_REGION=us-east-1

# Backup retention in days
BACKUP_RETENTION_DAYS=30

# ----------------------------------------------------------------------------
# Development Settings (development environment only)
# ----------------------------------------------------------------------------
# Enable auto-reload on code changes
AUTO_RELOAD=true

# Enable debug toolbar
DEBUG_TOOLBAR=false

# Enable SQL query logging
LOG_SQL_QUERIES=false

# Disable authentication (for testing only)
DISABLE_AUTH=false

# ----------------------------------------------------------------------------
# Testing Settings (test environment only)
# ----------------------------------------------------------------------------
# Use in-memory database for tests
# TEST_DATABASE_URL=sqlite:///:memory:

# Mock external services
# MOCK_OPENAI=true
# MOCK_EMAIL=true
# MOCK_CALENDAR=true

# ----------------------------------------------------------------------------
# Production Settings (production environment only)
# ----------------------------------------------------------------------------
# Force HTTPS redirect
# FORCE_HTTPS=true

# Enable strict transport security
# HSTS_ENABLED=true
# HSTS_MAX_AGE=31536000

# Enable security headers
# SECURITY_HEADERS_ENABLED=true

# Trusted proxy headers (if behind load balancer)
# TRUSTED_PROXY_HEADERS=X-Forwarded-For,X-Forwarded-Proto,X-Forwarded-Host

# ----------------------------------------------------------------------------
# Notes
# ----------------------------------------------------------------------------
# 1. Generate SECRET_KEY with: openssl rand -hex 32
# 2. Never commit .env file to version control
# 3. Use different values for development, staging, and production
# 4. Rotate secrets regularly (every 90 days recommended)
# 5. Use environment-specific OpenAI API keys
# 6. Enable all security features in production
# 7. Configure monitoring and alerting before going live
# 8. Test backup and restore procedures regularly
# ============================================================================

